class Solution {
    public List<String> res = new ArrayList<>();
    public void print(ArrayList<Integer> path){
        StringBuilder sb = new StringBuilder("");
        for(int i=0;i<path.size()-1;i++){
            sb.append(path.get(i));
            sb.append("->");
        }
        sb.append(path.get(path.size()-1));
        res.add(sb.toString());
    }

    public void printtreePath(TreeNode root, ArrayList<Integer> path){
        if(root == null){
            return;
        }
        path.add(root.val);
        if(root.left == null && root.right ==null){
            print(path);
        }
        printtreePath(root.left,path);
        printtreePath(root.right,path);
        path.remove(path.size()-1);
    }
    public List<String> binaryTreePaths(TreeNode root) {
        ArrayList<Integer> path = new ArrayList<>();
        printtreePath (root,path);
        return res;
    }
}
