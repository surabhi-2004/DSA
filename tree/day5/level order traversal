class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> l1 = new ArrayList<>();
        if(root == null){return l1;}
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);    //if we add value here we cannot access the left and right child
        q.add(null);
        List<Integer> l2 = new ArrayList<>();
        while(!q.isEmpty()){
            TreeNode n = q.remove();
            if(n == null){
                l1.add(new ArrayList<>(l2));
                l2.clear();
                if(q.isEmpty()){
                    break;
                }else{
                    q.add(null);
                }
            }else{
                l2.add(n.val);
                if(n.left!=null){
                    q.add(n.left);
                }
                if(n.right!=null){
                    q.add(n.right);
                }
            }
        }
        return l1;        
    }
}
